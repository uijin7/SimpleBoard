openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/reply:
    put:
      tags:
      - reply-api-controller
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReplyDto'
    post:
      tags:
      - reply-api-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReplyDto'
  /api/post:
    post:
      tags:
      - post-api-controller
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PostDto'
  /api/post/view:
    post:
      tags:
      - post-api-controller
      operationId: view
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostViewRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PostDto'
  /api/post/delete:
    post:
      tags:
      - post-api-controller
      operationId: delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostViewRequest'
        required: true
      responses:
        "200":
          description: OK
  /api/board:
    post:
      tags:
      - board-api-controller
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BoardDto'
  /api/reply/id/{id}:
    get:
      tags:
      - reply-api-controller
      operationId: read
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReplyDto'
    delete:
      tags:
      - reply-api-controller
      operationId: delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/reply/all:
    get:
      tags:
      - reply-api-controller
      operationId: list
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiListReplyDto'
  /api/post/all:
    get:
      tags:
      - post-api-controller
      operationId: list_1
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiListPostEntity'
  /api/board/ids:
    get:
      tags:
      - board-api-controller
      operationId: all
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoardDto'
  /api/board/id/{id}:
    get:
      tags:
      - board-api-controller
      operationId: view_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BoardDto'
components:
  schemas:
    ReplyDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        post_id:
          type: integer
          format: int64
        user_name:
          type: string
        password:
          type: string
        status:
          type: string
        title:
          type: string
        content:
          type: string
        replied_at:
          type: string
          format: date-time
    PostRequest:
      required:
      - content
      - email
      - password
      - title
      - user_name
      type: object
      properties:
        board_id:
          type: integer
          format: int64
        user_name:
          type: string
        password:
          maxLength: 4
          minLength: 4
          type: string
        email:
          type: string
        title:
          type: string
        content:
          type: string
    PostDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        board_id:
          type: integer
          format: int64
        user_name:
          type: string
        password:
          type: string
        email:
          type: string
        status:
          type: string
        title:
          type: string
        content:
          type: string
        posted_at:
          type: string
          format: date-time
        reply_list:
          type: array
          items:
            $ref: '#/components/schemas/ReplyDto'
    PostViewRequest:
      required:
      - password
      - post_id
      type: object
      properties:
        post_id:
          type: integer
          format: int64
        password:
          maxLength: 4
          minLength: 4
          type: string
    BoardRequest:
      required:
      - board_name
      type: object
      properties:
        board_name:
          type: string
    BoardDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        board_name:
          type: string
        status:
          type: string
        post_list:
          type: array
          items:
            $ref: '#/components/schemas/PostDto'
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    ApiListReplyDto:
      type: object
      properties:
        body:
          type: array
          items:
            $ref: '#/components/schemas/ReplyDto'
        pagination:
          $ref: '#/components/schemas/Pagination'
    Pagination:
      type: object
      properties:
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        currentElement:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalElement:
          type: integer
          format: int64
    ApiListPostEntity:
      type: object
      properties:
        body:
          type: array
          items:
            $ref: '#/components/schemas/PostEntity'
        pagination:
          $ref: '#/components/schemas/Pagination'
    PostEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userName:
          type: string
        password:
          type: string
        email:
          type: string
        status:
          type: string
        title:
          type: string
        content:
          type: string
        postedAt:
          type: string
          format: date-time
        replyList:
          type: array
          items:
            $ref: '#/components/schemas/ReplyEntity'
    ReplyEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userName:
          type: string
        password:
          type: string
        status:
          type: string
        title:
          type: string
        content:
          type: string
        repliedAt:
          type: string
          format: date-time
